name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones disabled for SonarQube

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type checking
        run: npm run typecheck

      - name: Run unit tests
        run: npm test -- --coverage --passWithNoTests

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/lcov.info

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-next-

      - name: Build application and API
        run: npm run build

#  Lighthouse CI Testing (disabled until credentials are configured)
#  lighthouse:
#    runs-on: ubuntu-latest
#    needs: ci
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18'
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Build application
#        run: npm run build
#
#      - name: Run Lighthouse CI
#        run: |
#          npm install -g @lhci/cli@0.12.x
#          lhci autorun
#        env:
#          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
#
#      - name: Upload Lighthouse results
#        uses: actions/upload-artifact@v3
#        with:
#          name: lighthouse-results
#          path: .lighthouseci
#        if: always()

# SonarQube/SonarCloud Analysis
  sonarcloud:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node_modules
        id: sonar-cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.sonar-cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  Security Audit (Snyk step disabled until credentials are configured)
#  security:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Run npm audit
#        run: npm audit --audit-level=moderate
#
#      # - name: Run Snyk Security Test
#      #   uses: snyk/actions/node@master
#      #   env:
#      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#      #   with:
#      #     args: --severity-threshold=high
